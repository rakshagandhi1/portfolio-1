{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/About.jsx","components/Work.jsx","components/Gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","className","to","exact","activeClassName","Component","Home","userInfo","home","greeting_text","title","description_l1","description_l2","href","company_url","company_name","description_l3","About","Work","Gallery","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"q3BAwBeA,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAQf,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAAEC,gBAAgB,eAAvC,QACA,kBAAC,IAAD,CAASF,GAAG,SAASE,gBAAgB,eAArC,SACA,kBAAC,IAAD,CAASF,GAAG,QAAQE,gBAAgB,eAApC,QACA,kBAAC,IAAD,CAASF,GAAG,WAAWE,gBAAgB,eAAvC,gB,GAdKC,a,QCsCNC,E,kDApCX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAQf,OACI,yBAAKC,UAAU,qBACX,wBAAIA,UAAU,iBACTM,EAASC,KAAKC,eAEnB,wBAAIR,UAAU,SACTM,EAASC,KAAKE,OAEnB,yBAAKT,UAAU,eACX,4BAAKM,EAASC,KAAKG,gBACnB,4BACKJ,EAASC,KAAKI,eACf,uBAAGC,KAAMN,EAASC,KAAKM,YAAaZ,GAAG,SAAQD,UAAU,eACpDM,EAASC,KAAKO,cAHvB,KAMA,4BAAKR,EAASC,KAAKQ,gBACnB,4BACI,kBAAC,IAAD,CAASd,GAAG,SAASD,UAAU,eAA/B,qB,GA3BLI,aCcJY,E,kDAhBX,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAQf,OACI,yBAAKC,UAAU,cAAf,a,GAVQI,aCiBLa,E,kDAhBX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAQf,OACI,yBAAKC,UAAU,aAAf,Y,GAVOI,aCiBJc,E,kDAhBX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAQf,OACI,yBAAKC,UAAU,gBAAf,e,GAVUI,a,YCuCPe,MAxBf,WACE,OACE,yBAAKnB,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACkB,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOlB,OAAK,EAACkB,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOlB,OAAK,EAACkB,KAAK,SAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOlB,OAAK,EAACkB,KAAK,YAChB,kBAAC,EAAD,WCrBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d8f2ac77.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {NavLink} from \"react-router-dom\";\n  \n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return(\n            <div className='header'>\n                <NavLink to='/' exact  activeClassName='active-link' >Home</NavLink>\n                <NavLink to='/about' activeClassName='active-link'>About</NavLink>\n                <NavLink to='/work' activeClassName='active-link'>Work</NavLink>\n                <NavLink to='/gallery' activeClassName='active-link'>Gallery</NavLink>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nimport userInfo from '../data/User.json';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return(\n            <div className='home-page op-zero'>\n                <h2 className='greeting-text'>\n                    {userInfo.home.greeting_text}\n                </h2>\n                <h1 className='title'>\n                    {userInfo.home.title}\n                </h1>\n                <div className='description'>\n                    <h3>{userInfo.home.description_l1}</h3>\n                    <h3>\n                        {userInfo.home.description_l2}\n                        <a href={userInfo.home.company_url} to='_blank'className='active-link'>\n                            {userInfo.home.company_name}\n                        </a>.\n                    </h3>\n                    <h3>{userInfo.home.description_l3}</h3>\n                    <h3>\n                        <NavLink to='/about' className='active-link'>\n                            See More >\n                        </NavLink>\n                    </h3>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return(\n            <div className='about-page'>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, {Component} from 'react';\n\nclass Work extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return(\n            <div className='work-page'>\n                Work\n            </div>\n        );\n    }\n}\n\nexport default Work;","import React, {Component} from 'react';\n\nclass Gallery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return(\n            <div className='gallery-page'>\n                Gallery\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Work from './components/Work';\nimport Gallery from './components/Gallery';\n\nimport './App.css';\nimport './common.css';\n\nfunction App() {\n  return (\n    <div className=\"main-container h100\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/about'>\n            <About />\n          </Route>\n          <Route exact path='/work'>\n            <Work />\n          </Route>\n          <Route exact path='/gallery'>\n            <Gallery />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}